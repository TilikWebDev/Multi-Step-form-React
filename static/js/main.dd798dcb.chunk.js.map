{"version":3,"sources":["redux/login-reducer.js","redux/redux-store.js","utils/validators/validators.js","components/common/form-controls/form-controls.js","components/login/steps/steps.js","components/login/submit-buton.js","components/login/login.js","components/login/login-container.js","App.js","index.js"],"names":["SET_SEND_DATA","initialState","send_data","loginReducer","state","action","type","new_data","reducers","combineReducers","login_page","store","createStore","applyMiddleware","thunkMiddleWare","customFieldLevelValidation","value","validations","result","validation","required","undefined","phone","match","email","validateEmail","validatePhone","validatePassword","length","FormControl","form","field","title","props","errors","name","touched","className","children","Input","inputMode","Select","disabled","option","map","o","index","defaultValue","toUpperCase","substring","Contact","React","memo","component","validate","Address","Category","Success","href","id","JSON","stringify","FormByStep","step","setErrors","setTouched","useEffect","SubmitButton","final","Login","setSendData","useState","setStep","steps","enableReinitialize","initialValues","password","country","address","city","category1","category2","category3","onSubmit","values","handleSubmit","status","style","width","s","join","compose","connect","dispatch","App","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.dd798dcb.chunk.js","sourcesContent":["const SET_SEND_DATA = 'SET_SEND_DATA';\r\n\r\nlet initialState = {\r\n    send_data: {\r\n\r\n    }\r\n};\r\n\r\nexport const setSendData = (new_data) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: SET_SEND_DATA,\r\n            new_data\r\n        })\r\n    }\r\n}\r\n\r\nexport const loginReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_SEND_DATA:\r\n            return {\r\n                ...state,\r\n                send_data: {\r\n                    ...action.new_data\r\n                }\r\n            }\r\n\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default loginReducer;","import {combineReducers, createStore, applyMiddleware} from 'redux';\r\nimport thunkMiddleWare from 'redux-thunk';\r\n\r\nimport loginReducer from './login-reducer';\r\n\r\nlet reducers = combineReducers({\r\n    login_page: loginReducer  \r\n});\r\n\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleWare));\r\n\r\nexport default store;","export const customFieldLevelValidation = (value, validations) => {\r\n    for (let validation of validations) {\r\n        const result = validation(value);\r\n\r\n        if (result)\r\n            return result;\r\n    }\r\n\r\n    return undefined;\r\n}\r\n\r\nexport const required = (value) => {\r\n    return (!value) ? 'Field is required' : undefined; \r\n}\r\n\r\nexport const maxLength = (length) => {\r\n    return (value) => {\r\n        return (value.length > length) ? `Max length is ${length}` : undefined;\r\n    }\r\n}\r\n\r\nexport const minLength = (length) => {\r\n    return (value) => {\r\n        return (value.length < length) ? `Min length is ${length}` : undefined;\r\n    }\r\n}\r\n\r\nexport const phone = (value) => {\r\n    let search = value.match(/^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/im);\r\n    return (!search) ? 'Wrong phone number' : undefined;\r\n}\r\n\r\nexport const email = (value) => {\r\n    let search = value.match(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\r\n    return (!search) ? 'Wrong email' : undefined;\r\n}\r\n\r\n// CUSTOM VALIDATORS\r\n\r\nexport const validateEmail = (value) => customFieldLevelValidation(value, [required, email]);\r\nexport const validatePhone = (value) => customFieldLevelValidation(value, [required, phone]);\r\nexport const validatePassword = (value) => customFieldLevelValidation(value, [required, minLength(8)]);","import React from 'react';\r\n\r\nconst FormControl = ({form, field, title, ...props}) => {\r\n    let errors = form.errors[field.name];\r\n    let touched = form.touched[field.name];\r\n    \r\n    return (\r\n        <div className={'form__field'}>\r\n            <p className={'field__title'}>\r\n                {title}\r\n\r\n                { \r\n                    (errors && touched) &&\r\n                        <span className={'field__error'}>\r\n                            {errors}\r\n                        </span>\r\n                }\r\n            </p>\r\n\r\n            {\r\n                props.children\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const Input = (props) => {\r\n    return (\r\n        <FormControl {...props}>\r\n            <input className={'field__input'} {...props.field} type={props.type} inputMode={(props.inputMode || null)} />\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport const Select = (props) => {\r\n    return (\r\n        <FormControl {...props}>\r\n            <div className={'select__wrapper'}>\r\n                <select className={'field__select'} {...props.field}>\r\n                    <option value=\"\" disabled>Select...</option>\r\n                    {\r\n                        props.option.map((o, index) => \r\n                            <option defaultValue={true} value={o} key={index}>{`${o[0].toUpperCase()}${o.substring(1)}`}</option>\r\n                        )\r\n                    }\r\n                </select>\r\n            </div>\r\n        </FormControl>\r\n    )\r\n}","import React, { useEffect } from 'react';\r\nimport { Field } from 'formik';\r\n\r\nimport { required, validateEmail, validatePassword, validatePhone } from '../../../utils/validators/validators';\r\nimport {Input, Select} from '../../../components/common/form-controls/form-controls';\r\n\r\nconst FormByStep = ({send_data, step, setErrors, setTouched}) => {\r\n\r\n    useEffect(() => {\r\n        setErrors({})\r\n        setTouched({})\r\n    }, [step])\r\n    \r\n    switch (step) {\r\n        case 1:\r\n            return <Contact/>\r\n\r\n        case 2:\r\n            return <Address/>\r\n\r\n        case 3:\r\n            return <Category/>\r\n\r\n        default:\r\n            return <Success send_data={send_data}/>\r\n    }\r\n}\r\n\r\nconst Contact = React.memo(() => {\r\n    return (\r\n        <div className={'form__body'}>\r\n            <Field title={'Phone'} name={'phone'} inputMode={'tel'} component={Input} validate={validatePhone}/>\r\n            <Field title={'Email'} name={'email'} component={Input} validate={validateEmail}/>\r\n            <Field title={'Password'} name={'password'} type={'password'} component={Input} validate={validatePassword}/>\r\n        </div>\r\n    )\r\n});\r\n\r\nconst Address = React.memo(() => {\r\n    return (\r\n        <div className={'form__body'}>\r\n            <Field title={'Country'} name={'country'} component={Input} validate={required}/>\r\n            <Field title={'City'} name={'city'} component={Input} validate={required}/>\r\n            <Field title={'Address'} name={'address'} component={Input} validate={required}/>\r\n        </div>\r\n    )\r\n});\r\n\r\nconst Category = React.memo(() => {\r\n    return (      \r\n        <div className={'form__body'}>\r\n            <Field title={'Category 1'} name={'category1'} component={Select} validate={required} option={['first', 'second', 'third']}/>\r\n            <Field title={'Category 2'} name={'category2'} component={Select} validate={required} option={['first', 'second', 'third']}/>\r\n            <Field title={'Category 3'} name={'category3'} component={Select} validate={required} option={['first', 'second', 'third']}/>\r\n        </div>\r\n    )\r\n});\r\n\r\nconst Success = React.memo(({send_data}) => {\r\n    return (      \r\n        <div className={'form__body'}>\r\n            <div className={'formsuccess'}>\r\n                <h1 className={'formsuccess__title'}>\r\n                    Success!\r\n                </h1>\r\n\r\n                <h4 className={'formsuccess__text'}>\r\n                    Your account was successfuly registered.\r\n                    <br></br>\r\n                    Please wait for account approval.\r\n                    <br></br>\r\n                    It can take up to 24 hours.\r\n                </h4>\r\n\r\n                <p className={'formsuccess__contact'}>\r\n                    Have questions?\r\n                    <br></br>\r\n                    Contact\r\n                    <a className={'formsuccess__link'} href=\"mailto:info@site.com\">\r\n                        info@site.com\r\n                    </a>\r\n                </p>\r\n            </div>\r\n\r\n            <div id={'log'}>\r\n                {\r\n                    `Send data to server: ${JSON.stringify(send_data)}`\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\n\r\nexport default FormByStep;","import React from 'react';\r\n\r\nconst SubmitButton = ({step, final}) => {   \r\n    return (\r\n        (step < final) ?\r\n            <button className={'form__send'}>Continue</button> :\r\n            (step === final) ? \r\n                <button className={'form__send'}>Submit</button>:\r\n                false\r\n    )\r\n}\r\n\r\nexport default SubmitButton;","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\n\r\nimport FormByStep from './steps/steps';\r\nimport SubmitButton from './submit-buton';\r\n\r\nconst Login = ({send_data, setSendData}) => {\r\n\r\n    const [step, setStep] = useState(1);\r\n\r\n    const initialValues = {\r\n        email: '', \r\n        phone: '',\r\n        password: '',\r\n        country: '',\r\n        address: '',\r\n        city: '',\r\n        category1: '',\r\n        category2: '',\r\n        category3: ''\r\n    }\r\n\r\n    const steps = [\r\n        'Contacts',\r\n        'Address',\r\n        'Categories',\r\n        'Success'\r\n    ]\r\n\r\n    const onSubmit = (values) => {\r\n        setStep(step + 1);      \r\n        (step === (steps.length - 1)/* -1 Because last step is Success page */) && setSendData(values);\r\n    };\r\n\r\n    return (\r\n        <Formik enableReinitialize initialValues={{...initialValues}}  onSubmit={onSubmit}>\r\n            {\r\n                ({handleSubmit, setErrors, setTouched, status}) => (\r\n                    <form onSubmit={handleSubmit} className={'form'}> \r\n                        <div className={'form__container'}>\r\n                            <div className={'steps form__steps'}>\r\n                                <div className={'steps__arrow_container'}>\r\n                                    <hr style={{width: `${100 / (steps.length - 1) * (step - 1)}%`}} className={'steps__arrow'}></hr>\r\n                                </div>\r\n\r\n                                {\r\n                                    steps.map((s, index) => {\r\n                                        return (\r\n                                            <div key={index} className={['steps__step',  (step > index)  && 'active'].join(' ')}>\r\n                                                {s}\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n\r\n                            {   \r\n                                (status) &&\r\n                                    <div className={'form__error'}>\r\n                                        {status}\r\n                                    </div>        \r\n                            }    \r\n\r\n                            <FormByStep send_data={send_data} step={step} setErrors={setErrors} setTouched={setTouched}/>\r\n                            <SubmitButton step={step} final={(steps.length - 1)/* -1 Because last step is Success page */}/>\r\n                        </div>\r\n                    </form> \r\n                )\r\n            }\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default React.memo(Login);","import React from 'react';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Login from './login';\r\nimport {setSendData} from '../../redux/login-reducer';\r\n\r\nconst LoginContainer = ({send_data, setSendData}) => {\r\n  return (\r\n    <Login send_data={send_data} setSendData={setSendData}/>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    send_data: state.login_page.send_data\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {setSendData})\r\n)(LoginContainer);","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport LoginContainer from './components/login/login-container';\r\n\r\nimport './App.css';\r\n\r\nconst App = (props) => {\r\n  return (\r\n    <div id=\"wrapper\">\r\n      <Route path={'/'} render={() => <LoginContainer/>}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport store from './redux/redux-store';\r\nimport {BrowserRouter} from 'react-router-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </BrowserRouter>,\r\n  document.getElementById('body')\r\n);"],"sourceRoot":""}